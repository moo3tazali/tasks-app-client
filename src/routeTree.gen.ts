/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardLayoutImport } from './routes/dashboard/layout'
import { Route as PublicLayoutImport } from './routes/_public/layout'
import { Route as AuthLayoutImport } from './routes/_auth/layout'
import { Route as DashboardSettingsPageImport } from './routes/dashboard/settings/page'
import { Route as DashboardhomePageImport } from './routes/dashboard/(home)/page'
import { Route as PublicAboutPageImport } from './routes/_public/about/page'
import { Route as PublichomePageImport } from './routes/_public/(home)/page'
import { Route as AuthRegisterPageImport } from './routes/_auth/register/page'
import { Route as AuthLoginPageImport } from './routes/_auth/login/page'

// Create/Update Routes

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const PublicLayoutRoute = PublicLayoutImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsPageRoute = DashboardSettingsPageImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardhomePageRoute = DashboardhomePageImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const PublicAboutPageRoute = PublicAboutPageImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const PublichomePageRoute = PublichomePageImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const AuthRegisterPageRoute = AuthRegisterPageImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLoginPageRoute = AuthLoginPageImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicLayoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginPageImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterPageImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_public/(home)/': {
      id: '/_public/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublichomePageImport
      parentRoute: typeof PublicLayoutImport
    }
    '/_public/about/': {
      id: '/_public/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutPageImport
      parentRoute: typeof PublicLayoutImport
    }
    '/dashboard/(home)/': {
      id: '/dashboard/(home)/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardhomePageImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsPageImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLoginPageRoute: typeof AuthLoginPageRoute
  AuthRegisterPageRoute: typeof AuthRegisterPageRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLoginPageRoute: AuthLoginPageRoute,
  AuthRegisterPageRoute: AuthRegisterPageRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface PublicLayoutRouteChildren {
  PublichomePageRoute: typeof PublichomePageRoute
  PublicAboutPageRoute: typeof PublicAboutPageRoute
}

const PublicLayoutRouteChildren: PublicLayoutRouteChildren = {
  PublichomePageRoute: PublichomePageRoute,
  PublicAboutPageRoute: PublicAboutPageRoute,
}

const PublicLayoutRouteWithChildren = PublicLayoutRoute._addFileChildren(
  PublicLayoutRouteChildren,
)

interface DashboardLayoutRouteChildren {
  DashboardhomePageRoute: typeof DashboardhomePageRoute
  DashboardSettingsPageRoute: typeof DashboardSettingsPageRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardhomePageRoute: DashboardhomePageRoute,
  DashboardSettingsPageRoute: DashboardSettingsPageRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/login': typeof AuthLoginPageRoute
  '/register': typeof AuthRegisterPageRoute
  '/': typeof PublichomePageRoute
  '/about': typeof PublicAboutPageRoute
  '/dashboard/': typeof DashboardhomePageRoute
  '/dashboard/settings': typeof DashboardSettingsPageRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteWithChildren
  '/login': typeof AuthLoginPageRoute
  '/register': typeof AuthRegisterPageRoute
  '/': typeof PublichomePageRoute
  '/about': typeof PublicAboutPageRoute
  '/dashboard': typeof DashboardhomePageRoute
  '/dashboard/settings': typeof DashboardSettingsPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthLayoutRouteWithChildren
  '/_public': typeof PublicLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/_auth/login/': typeof AuthLoginPageRoute
  '/_auth/register/': typeof AuthRegisterPageRoute
  '/_public/(home)/': typeof PublichomePageRoute
  '/_public/about/': typeof PublicAboutPageRoute
  '/dashboard/(home)/': typeof DashboardhomePageRoute
  '/dashboard/settings/': typeof DashboardSettingsPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/login'
    | '/register'
    | '/'
    | '/about'
    | '/dashboard/'
    | '/dashboard/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/settings'
  id:
    | '__root__'
    | '/_auth'
    | '/_public'
    | '/dashboard'
    | '/_auth/login/'
    | '/_auth/register/'
    | '/_public/(home)/'
    | '/_public/about/'
    | '/dashboard/(home)/'
    | '/dashboard/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  PublicLayoutRoute: typeof PublicLayoutRouteWithChildren
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  PublicLayoutRoute: PublicLayoutRouteWithChildren,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_public",
        "/dashboard"
      ]
    },
    "/_auth": {
      "filePath": "_auth/layout.tsx",
      "children": [
        "/_auth/login/",
        "/_auth/register/"
      ]
    },
    "/_public": {
      "filePath": "_public/layout.tsx",
      "children": [
        "/_public/(home)/",
        "/_public/about/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/layout.tsx",
      "children": [
        "/dashboard/(home)/",
        "/dashboard/settings/"
      ]
    },
    "/_auth/login/": {
      "filePath": "_auth/login/page.tsx",
      "parent": "/_auth"
    },
    "/_auth/register/": {
      "filePath": "_auth/register/page.tsx",
      "parent": "/_auth"
    },
    "/_public/(home)/": {
      "filePath": "_public/(home)/page.tsx",
      "parent": "/_public"
    },
    "/_public/about/": {
      "filePath": "_public/about/page.tsx",
      "parent": "/_public"
    },
    "/dashboard/(home)/": {
      "filePath": "dashboard/(home)/page.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/page.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
